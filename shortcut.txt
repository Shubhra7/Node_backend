1. Proxy --> [Handle CORS (Cross Origin Problem)]
	for Create by CRP --> 
		add in package = "proxy":"https://localhost:4000"
	when made by vite --->
		in vite.config.js = proxy{
					'/api':'https://localhost:4000"
					}
2. intall axios to handle api rather than fetch()
3. npm i mongoose 
4. npm i express

// professional Setup   (video: 7)
5. .gitkeep
6. .gitignore (search ==> .gitignore generator => node modules paste)

7. *** nodemon ==> npm i -D nodemon [help server to restart when file are saved]	
	Nodemon is a utility tool for Node.js applications that automatically monitors changes in your 	source code and restarts the application when changes are detected. It is particularly useful 	during development, as it eliminates the need to manually stop and restart the server every time 	you make a code change.

9. for staring point ____ "dev":"nodemon src/index.js"
	*******	// "dev": "nodemon -r dotenv/config --experimental-json-modules src/index.js" ****

8. make module base ==> IN package.json-> "type": "module"

9. npm i -D prettier (when working in team maintain the save coding style)

--> .prettierrc
{
    "singleQuote": false,
    "bracketSpacing": true,
    "tabWidth": 2,
    "trailingComma": "es5",
    "semi": true
}

--> .prettierignore
/.vscode
/node_modules
./dist

*.env
.env
.env.*


10) npm i mongoose express dotenv

11) npm i cookie-parser cors 

12) Model Link: https://app.eraser.io/workspace/YtPqZ1VogxGy1jzIDkzj (chai aur code project)

13) INSTALL MONGODB Aggregation function :....
     ..............>>>>>>  npm install mongoose-aggregate-paginate-v2


# Password handling (Cryptography)
14) npm i bcrypt [ bcrypt help to hash our password]
15) npm i jsonwebtoken  [for implement the JSON web tokens] https://jwt.io/introduction

#For file upload, Image upload
16) npm i cloudinary

